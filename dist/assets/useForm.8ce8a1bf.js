import{s as m,c0 as l,i as s,d_ as d,Z as f,d$ as u,dY as h,ah as y}from"./index.da8cb631.js";function v(o){const r=m(null),n=m(!1);async function a(){const e=s(r);return e||h("The form instance has not been obtained, please make sure that the form has been rendered when performing the form operation!"),await y(),e}function c(e){l(()=>{r.value=null,n.value=null}),!(s(n)&&d()&&e===s(r))&&(r.value=e,n.value=!0,f(()=>o,()=>{o&&e.setProps(u(o))},{immediate:!0,deep:!0}))}return[c,{scrollToField:async(e,t)=>{(await a()).scrollToField(e,t)},setProps:async e=>{(await a()).setProps(e)},updateSchema:async e=>{(await a()).updateSchema(e)},resetSchema:async e=>{(await a()).resetSchema(e)},clearValidate:async e=>{(await a()).clearValidate(e)},resetFields:async()=>{a().then(async e=>{await e.resetFields()})},removeSchemaByFiled:async e=>{s(r)?.removeSchemaByFiled(e)},getFieldsValue:()=>s(r)?.getFieldsValue(),setFieldsValue:async e=>{(await a()).setFieldsValue(e)},appendSchemaByField:async(e,t,i)=>{(await a()).appendSchemaByField(e,t,i)},submit:async()=>(await a()).submit(),validate:async e=>(await a()).validate(e),validateFields:async e=>(await a()).validateFields(e)}]}export{v as u};
